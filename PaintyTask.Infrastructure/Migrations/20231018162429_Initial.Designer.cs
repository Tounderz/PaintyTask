// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaintyTask.Infrastructure.Context;

#nullable disable

namespace PaintyTask.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231018162429_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PaintyTask.Domain.Models.FriendshipData", b =>
                {
                    b.Property<int>("UserSenderId")
                        .HasColumnType("int");

                    b.Property<int>("UserReceiverId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("bit");

                    b.HasKey("UserSenderId", "UserReceiverId");

                    b.HasIndex("UserReceiverId");

                    b.ToTable("Friendships");

                    b.HasData(
                        new
                        {
                            UserSenderId = 1,
                            UserReceiverId = 2,
                            IsAccepted = true
                        },
                        new
                        {
                            UserSenderId = 1,
                            UserReceiverId = 3,
                            IsAccepted = false
                        },
                        new
                        {
                            UserSenderId = 2,
                            UserReceiverId = 4,
                            IsAccepted = true
                        },
                        new
                        {
                            UserSenderId = 2,
                            UserReceiverId = 1,
                            IsAccepted = false
                        },
                        new
                        {
                            UserSenderId = 3,
                            UserReceiverId = 4,
                            IsAccepted = false
                        },
                        new
                        {
                            UserSenderId = 4,
                            UserReceiverId = 3,
                            IsAccepted = true
                        });
                });

            modelBuilder.Entity("PaintyTask.Domain.Models.PhotoData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Photos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Url = "/Photos/69850.jpg",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Url = "/Photos/9acebdc6-126a-4e5b-857e-fcf777e50dd4apple-logo.jpg",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Url = "/Photos/bd455fb4-0ca9-4c9f-8bcd-7d44647d49f8admin.jpg",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Url = "/Photos/bdfe5019-5f62-4662-8355-400f5921f2d2bob.jpg",
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            Url = "/Photos/brandFon.jpg",
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            Url = "/Photos/cmoeeddpcevumpqs.jpg",
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            Url = "/Photos/DjNqxwoKLNY.jpg",
                            UserId = 3
                        },
                        new
                        {
                            Id = 8,
                            Url = "/Photos/homeFon.jpg",
                            UserId = 3
                        },
                        new
                        {
                            Id = 9,
                            Url = "/Photos/images_anubis.jpg",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("PaintyTask.Domain.Models.UserData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "user1@example.com",
                            Login = "User1",
                            Name = "User1",
                            Password = "$2a$11$WLh91OsXdVAX.pY4I.CQXeQcYFDTnlunJyKRJ/THzRLI.qVVW6nqi"
                        },
                        new
                        {
                            Id = 2,
                            Email = "user2@example.com",
                            Login = "User2",
                            Name = "User2",
                            Password = "$2a$11$rhnoZe9ImM9AsxytdfvOM.IB5Gyvt56oJQa/Vtqj2Mfr778eVdzCS"
                        },
                        new
                        {
                            Id = 3,
                            Email = "user3@example.com",
                            Login = "User3",
                            Name = "User3",
                            Password = "$2a$11$3kXhHAh1OCYWtoXMzhbxqOUPXZ.Ne9bgWXXfPyhPVmKYSg8xpJ3ke"
                        },
                        new
                        {
                            Id = 4,
                            Email = "user4@example.com",
                            Login = "User4",
                            Name = "User4",
                            Password = "$2a$11$QXEpFM0GUG5igRiKOye5z.ySdEY8ILvbDyhIf0dzy2woPV/HVOIYi"
                        });
                });

            modelBuilder.Entity("PaintyTask.Domain.Models.FriendshipData", b =>
                {
                    b.HasOne("PaintyTask.Domain.Models.UserData", "UserReceiver")
                        .WithMany("ReceivedFriendshipRequests")
                        .HasForeignKey("UserReceiverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PaintyTask.Domain.Models.UserData", "UserSender")
                        .WithMany("SentFriendshipRequests")
                        .HasForeignKey("UserSenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserReceiver");

                    b.Navigation("UserSender");
                });

            modelBuilder.Entity("PaintyTask.Domain.Models.PhotoData", b =>
                {
                    b.HasOne("PaintyTask.Domain.Models.UserData", "User")
                        .WithMany("Photos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PaintyTask.Domain.Models.UserData", b =>
                {
                    b.Navigation("Photos");

                    b.Navigation("ReceivedFriendshipRequests");

                    b.Navigation("SentFriendshipRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
